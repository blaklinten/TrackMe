#!/bin/bash

sum()
{
	ACTIVITY="$1"
    for LINE in $(sed -n '0~3p' "$ACTIVITY"); do
        if [[ ! "$LINE" == "Duration:" ]]; then
            let "HOURS = $HOURS + $(echo "$LINE" | sed -n -e 's/^\(.*\):\(.*\):\(.*\)/\1/p')"
            let "MINUTES = $MINUTES + $(echo "$LINE" | sed -n -e 's/^\(.*\):\(.*\):\(.*\)/\2/p')"
            let "SEC = $SEC + $(echo "$LINE" | sed -n -e 's/^\(.*\):\(.*\):\(.*\)/\3/p')"
        fi
    done

	let "HOURS = $HOURS + ($MINUTES + $SEC / 60) / 60"
	let "MINUTES = ($MINUTES + $SEC / 60) % 60"
	let "SEC = $SEC % 60"

}

sumActivity()
{
	ACTIVITY="$1"

	HOURS=0
	MINUTES=0
	SEC=0

	sum "$ACTIVITY"

	showAndRead "Total time = $HOURS:$MINUTES:$SEC"
}

sumProject()
{
	PROJECT="$1"

	HOURS=0
	MINUTES=0
	SEC=0

	for ACTIVITY in $(ls "$PROJECT"); do
		sum "$PROJECT/$ACTIVITY"
	done

	showAndRead "Total time = $HOURS:$MINUTES:$SEC"
}

summarize()
{
	PROJECT="$1"

	CHOICE="$(parseSpaces $(showAndRead "Choose one activity (a)ll or (q)uit" "$(for ACTIVITY in $(ls $PROJECTS/$PROJECT); do parseUnderscores "$ACTIVITY"; done)"))"

	case "$CHOICE" in 
    	"q")
        	exit
    	;;
    	"a")
        	sumProject "$PROJECTS/$PROJECT"
    	;;
    	*)
        	pushd "$PROJECTS/$PROJECT" > /dev/null
        	for ACTIVITY in *; do
            	if [[ "$CHOICE" == "$ACTIVITY" ]]; then
                	sumActivity "$PROJECTS/$PROJECT/$CHOICE"
                	popd > /dev/null
                	return
            	fi
        	done
        	showAndRead "Activity \"$CHOICE\" does not exist, try again or exit (q)."
        	summarize "$PROJECT"
        	;;
	esac
}
